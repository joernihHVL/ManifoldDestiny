---
title: ""
output: github_document
always_allow_html: true
execute: 
  cache: false
filters:
  - webr
---

# Manifold Destiny - or how to rig an election
**Based upon the ideas developed by Edward K. Solomon**
![](pngs/md.png)


```{webr-r}
webr::install("ManifoldDestinyWASMP", repos = "https://lotariohw26.github.io/MD_WASMC")
webr::install("ManifoldDestinyWASMD", repos = "https://lotariohw26.github.io/MD_WASMC")
webr::install(c("dplyr","purrr"))
library(ManifoldDestinyWASMP)
ls(package:ManifoldDestinyWASMP)
library(ManifoldDestinyWASMD)
ls(package:ManifoldDestinyWASMD)
```

```{webr-r}
Countingprocess <- setRefClass("Countingprocess", 
			       fields=list(sdfc='data.frame',
					   rdfci='data.frame',
					   rdfc='data.frame',
					   rofc='data.frame',
                                           rdfce='data.frame', 
					   quintile='data.frame',
					   desms='data.frame', 
					   r2list='list', 
					   predet='list',
					   sumreg='vector', 
					   psel='vector', 
					   polyc='list',
					   radpar='vector',
					   parameters='list', 
					   preend='list', 
					   parampre='data.frame', 
                                           rotplotly='list',
					   se='list',
					   lx='list',
					   pl_2dsort='list',
					   pl_corrxy='list',
					   pl_rescro='list',
					   pl_3d_mani='list',  
					   all_pl_3d_mani='list',
					   enf='list',
					   mansysl='list',
					   gensysl='list',
					   exnrs='vector',
					   allvar='list',
					   eqpar='list',
					   loss_df='data.frame'
					   ))
Countingprocess$methods(initialize=function(sdfinp=NULL,
					   selvar=c('P','R','S','T','U','V'), 
					   polyn=9, 
					   sortby=alpha
					   ){

})
```



```{r, echo=F}
knitr::knit_exit()
```

```{r}
library(dplyr)

# Sample data frame
df <- data.frame(
  P = c(1, 2, 1, 2, 3),
  Value = c("A", "B", "C", "D", "E")
)

# Split the data frame by the 'P' column
df_list <- df %>% group_split(P)
str(df_list)
# Access the individual groups
for (group in df_list) {
  print(group)
}
```


[From Bard:](https://g.co/bard/share/37bfadf733c5)

Published July 22, 2023 at 05:37 AM

> The first problem is that the proportion of votes cast by mail (w) is nearly constant across all precincts. This is not what we would expect to see in a fair election, where the proportion of votes cast by mail would vary depending on the demographics of the precinct. For example, we would expect to see a higher proportion of votes cast by mail in precincts with a higher population of elderly people.

> The second problem is that we can calculate D knowing only K and A. This is also not possible in a fair election, as D should be determined by the number of ballots cast by mail, which is not known until after all ballots have been cast.

> The third problem is that n decreases rapidly over the quantiles of z, meaning that Democrats are more likely to cast their ballots by mail as Republicans perform better overall. This is not what we would expect to see in a fair election, as we would expect the proportion of Democrats and Republicans who vote by mail to be relatively constant.

> The fourth problem is that the difference between x and y diverges rapidly over the quantiles of z, meaning that as Republican do better in the early vote, the more they suffer in the mail-in vote. This is also not what we would expect to see in a fair election, as we would expect the two types of votes to be relatively correlated.


```{webr-r}
webr::install("ManifoldDestinyWASM", repos = "https://lotariohw26.github.io/ManifoldDestinyWASM/repo")
library(ManifoldDestinyWASM)
ls(package:ManifoldDestinyWASM)
```

