---
title: ""
output: github_document
always_allow_html: true
execute: 
  cache: false
filters:
  - webr
---

# Manifold Destiny - or how to rig an election
**Based upon the ideas developed by Edward K. Solomon**
![](pngs/md.png)
tidyr

### Install and load packages
```{webr-r}
webr::install("ManifoldDestinyWASMP", repos = "https://lotariohw26.github.io/MD_WASMC")
webr::install("ManifoldDestinyWASMD", repos = "https://lotariohw26.github.io/MD_WASMC")
webr::install(c("cowplot","broom","htmltools","combinat","DT","dplyr","purrr","magrittr","data.table","tidyr","plotly"))
library(ManifoldDestinyWASMP)
ls(package:ManifoldDestinyWASMP)
library(ManifoldDestinyWASMD)
ls(package:ManifoldDestinyWASMD)
library(magrittr)
md <- ManifoldDestinyWASMD::metad
library(dplyr)
library(combinat)
library(htmltools)
library(ggplot2)
library(broom)
library(combinat)
```

### Simulation
```{webr-r}
dfm <- (function(x){data.frame(P=seq(1,x),RV=as.integer(rnorm(x,1000,30)))})(10)
probw <- c(m=0.51,s=0.10)
probva <- c(vdm=0.7,mdm=0.4,vds=0.10,mds=0.10)
probvb <- c(vdm=0.5,mdm=0.6,vds=0.10,mds=0.10)
ztech <- c(0,1)	
app_bal <- ballcastsim(dfm,probw,probva,probvb,ztech)
SimVoterdatabase(app_bal)
app_n_rep <- selreport(app_bal,md$app0)
app_n_out <- seloutput(app_n_rep)
app_n_sim <- SimVoterdatabase(app_bal)
```

### Applications

#### App1
```{webr-r}
app1_rp <- selreport(app1,md$app1)
app_1_out <- seloutput(app1_rp)
```

#### App2
```{webr-r}
app2_rp <- selreport(app2,md$app2)
app_2_out <- seloutput(app2_rp)
```

**Last time updated: `r as.Date(Sys.time())`**

```{r, echo=F}
knitr::knit_exit()
```

